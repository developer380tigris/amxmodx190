name: Continuous Integration

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - 1.9-dev
  pull_request:
    branches:
      - master
      - 1.9-dev

jobs:
  test:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            os_short: linux
            compiler_cc: gcc
            compiler_cxx: g++
          - os: ubuntu-22.04
            os_short: linux
            compiler_cc: clang
            compiler_cxx: clang++
          - os: ubuntu-20.04
            os_short: linux
            compiler_cc: clang-10
            compiler_cxx: clang++-10
          - os: ubuntu-20.04
            os_short: linux
            compiler_cc: gcc-9
            compiler_cxx: g++-9
            compiler_install: 'g++-9 g++-9-multilib'
          - os: windows-latest
            os_short: windows
            compiler_cc: msvc
          - os: windows-2022
            os_short: windows
            compiler_cc: msvc

      fail-fast: false

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os_short }}-${{ matrix.os }}-${{ matrix.compiler_cc }}
    env:
      DEPENDENCIES_FOLDER: dependencies
      DEPENDENCIES_ROOT: ${{ github.workspace }}/dependencies
      DEPENDENCIES_ROOT_WIN: ${{ github.workspace }}\dependencies

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          path: amxmodx

      - uses: actions/setup-python@v5
        name: Setup Python
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python --version

      - name: Install AMXModX dependencies (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          mkdir -p ${{ env.DEPENDENCIES_FOLDER }}
          cd ${{ env.DEPENDENCIES_FOLDER }}
          mkdir -p amxmodx
          ../amxmodx/support/checkout-deps.sh

      - name: Install AMXModX dependencies (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          mkdir %DEPENDENCIES_ROOT_WIN%\nasm
          curl -L -o "%DEPENDENCIES_ROOT_WIN%\nasm\nasm.zip" https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/win32/nasm-2.16.01-win32.zip
          chdir %DEPENDENCIES_ROOT_WIN%\nasm
          7z x nasm.zip
          
          chdir %DEPENDENCIES_ROOT_WIN%
          git clone https://github.com/alliedmodders/ambuild
          git clone https://github.com/alliedmodders/metamod-hl1 metamod-am
          git clone https://github.com/alliedmodders/hlsdk
          
          curl -L -o "mysql-connector-c-6.1.11-win32.zip" https://downloads.mysql.com/archives/get/p/19/file/mysql-connector-c-6.1.11-win32.zip
          7z x mysql-connector-c-6.1.11-win32.zip -o"mysql"
          cd mysql
          ren mysql-connector-c-6.1.11-win32 mysql-5.5
          move /Y mysql-5.5 ..\
          
          cd ..\ambuild
          python setup.py install

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            gcc-multilib g++-multilib libstdc++6 lib32stdc++6 \
            libc6-dev libc6-dev-i386 linux-libc-dev \
            linux-libc-dev:i386 lib32z1-dev nasm ${{ matrix.compiler_cc }} ${{ matrix.compiler_install }}

      - name: Select compiler (Linux)
        if: runner.os == 'Linux'
        run: |
          echo "CC=${{ matrix.compiler_cc }}" >> $GITHUB_ENV
          echo "CXX=${{ matrix.compiler_cxx }}" >> $GITHUB_ENV
          ${{ matrix.compiler_cc }} --version
          ${{ matrix.compiler_cxx }} --version

      - uses: ilammy/setup-nasm@v1
        with:
          version: '2.16.01'

      - name: Build Linux
        if: runner.os == 'Linux'
        working-directory: amxmodx
        run: |
          mkdir -p build
          cd build
          # отключаем -Werror если установлен
          sed -i 's/-Werror//g' ../configure.py || true
          python ../configure.py \
            --enable-optimize \
            --metamod=${{ env.DEPENDENCIES_ROOT }}/metamod-am \
            --hlsdk=${{ env.DEPENDENCIES_ROOT }}/hlsdk \
            --mysql=${{ env.DEPENDENCIES_ROOT }}/mysql-5.5
          ambuild

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86
        if: runner.os == 'Windows'

      - name: Build Windows
        if: runner.os == 'Windows'
        working-directory: amxmodx
        shell: cmd
        run: |
          cl.exe
          mkdir build
          cd build
          python ..\configure.py ^
            --enable-optimize ^
            --metamod=%DEPENDENCIES_ROOT_WIN%\metamod-am ^
            --hlsdk=%DEPENDENCIES_ROOT_WIN%\hlsdk ^
            --mysql=%DEPENDENCIES_ROOT_WIN%\mysql-5.5
          ambuild
